<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hk_Mayfly Blog</title>
  
  <subtitle>不知道导致不确定，不确定导致决策瘫痪。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hkmayfly.com/"/>
  <updated>2019-09-26T04:08:46.535Z</updated>
  <id>http://hkmayfly.com/</id>
  
  <author>
    <name>Hk_Mayfly</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>攻防世界--re1-100</title>
    <link href="http://hkmayfly.com/2019/09/26/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re1-100/"/>
    <id>http://hkmayfly.com/2019/09/26/攻防世界-re1-100/</id>
    <published>2019-09-26T04:05:22.000Z</published>
    <updated>2019-09-26T04:08:46.535Z</updated>
    
    <content type="html"><![CDATA[<p>测试文件：<a href="https://adworld.xctf.org.cn/media/task/attachments/dc14f9a05f2846249336a84aecaf18a2.zip" target="_blank">https://adworld.xctf.org.cn/media/task/attachments/dc14f9a05f2846249336a84aecaf18a2.zip</a></p><p>&nbsp;</p><h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h2><p><img src="https://img2018.cnblogs.com/blog/1228809/201909/1228809-20190924222646387-527555929.png" alt></p><p>获取信息</p><ul><li>64位文件</li></ul><p>&nbsp;</p><h2 id="2-IDA打开"><a href="#2-IDA打开" class="headerlink" title="2.IDA打开"></a>2.IDA打开</h2><p>前面大部分都是&ldquo;无用代码&rdquo;，这里贴上我们需要的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;    <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">memset</span>(flag, <span class="number">0</span>, <span class="number">0xC8</span>uLL);</span><br><span class="line">      numRead = read(pParentWrite[<span class="number">0</span>], flag, <span class="number">0xC8</span>uLL);</span><br><span class="line">      <span class="keyword">if</span> ( numRead == <span class="number">-1</span> )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">if</span> ( numRead )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( childCheckDebugResult() )</span><br><span class="line">        &#123;</span><br><span class="line">          responseFalse();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( flag[<span class="number">0</span>] == <span class="string">'&#123;'</span> )              <span class="comment">// flag[0]为'&#123;'</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( <span class="built_in">strlen</span>(flag) == <span class="number">42</span> )             <span class="comment">// len(flag)=42</span></span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(&amp;amp;flag[<span class="number">1</span>], <span class="string">"53fc275d81"</span>, <span class="number">10u</span>LL) )<span class="comment">// flag[1]~flag[10]为"53fc275d81"</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">if</span> ( flag[<span class="built_in">strlen</span>(flag) - <span class="number">1</span>] == <span class="string">'&#125;'</span> )<span class="comment">// flag[41]='&#125;'</span></span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(&amp;amp;flag[<span class="number">31</span>], <span class="string">"4938ae4efd"</span>, <span class="number">10u</span>LL) )<span class="comment">// flag[31]~flag[40]为'4938ae4efd'</span></span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="keyword">if</span> ( !confuseKey(flag, <span class="number">42</span>) )  <span class="comment">// 改变原本flag中字符串的顺序</span></span><br><span class="line">                  &#123;</span><br><span class="line">                    responseFalse();</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">else</span> <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(flag, <span class="string">"&#123;daf29f59034938ae4efd53fc275d81053ed5be8c&#125;"</span>, <span class="number">42u</span>LL) )<span class="comment">// '&#123;&#125;'中间有40个字符，10个为一组，则现在顺序为3,4,1,2</span></span><br><span class="line">                  &#123;</span><br><span class="line">                    responseTrue();</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                  &#123;</span><br><span class="line">                    responseFalse();</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                  responseFalse();</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">              &#123;</span><br><span class="line">                responseFalse();</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">              responseFalse();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            responseFalse();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          responseFalse();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> __<span class="function">cdecl <span class="title">confuseKey</span><span class="params">(<span class="keyword">char</span> *szKey, <span class="keyword">int</span> iKeyLength)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> szPart1[<span class="number">15</span>]; <span class="comment">// [rsp+10h] [rbp-50h]</span></span><br><span class="line">  <span class="keyword">char</span> szPart2[<span class="number">15</span>]; <span class="comment">// [rsp+20h] [rbp-40h]</span></span><br><span class="line">  <span class="keyword">char</span> szPart3[<span class="number">15</span>]; <span class="comment">// [rsp+30h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">char</span> szPart4[<span class="number">15</span>]; <span class="comment">// [rsp+40h] [rbp-20h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v7; <span class="comment">// [rsp+58h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  *(_QWORD *)szPart1 = <span class="number">0L</span>L;</span><br><span class="line">  *(_DWORD *)&amp;amp;szPart1[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">  *(_WORD *)&amp;amp;szPart1[<span class="number">12</span>] = <span class="number">0</span>;</span><br><span class="line">  szPart1[<span class="number">14</span>] = <span class="number">0</span>;</span><br><span class="line">  *(_QWORD *)szPart2 = <span class="number">0L</span>L;</span><br><span class="line">  *(_DWORD *)&amp;amp;szPart2[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">  *(_WORD *)&amp;amp;szPart2[<span class="number">12</span>] = <span class="number">0</span>;</span><br><span class="line">  szPart2[<span class="number">14</span>] = <span class="number">0</span>;</span><br><span class="line">  *(_QWORD *)szPart3 = <span class="number">0L</span>L;</span><br><span class="line">  *(_DWORD *)&amp;amp;szPart3[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">  *(_WORD *)&amp;amp;szPart3[<span class="number">12</span>] = <span class="number">0</span>;</span><br><span class="line">  szPart3[<span class="number">14</span>] = <span class="number">0</span>;</span><br><span class="line">  *(_QWORD *)szPart4 = <span class="number">0L</span>L;</span><br><span class="line">  *(_DWORD *)&amp;amp;szPart4[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">  *(_WORD *)&amp;amp;szPart4[<span class="number">12</span>] = <span class="number">0</span>;</span><br><span class="line">  szPart4[<span class="number">14</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( iKeyLength != <span class="number">42</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( !szKey )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(szKey) != <span class="number">42</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( *szKey != <span class="number">123</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">strncpy</span>(szPart1, szKey + <span class="number">1</span>, <span class="number">0xA</span>uLL);</span><br><span class="line">  <span class="built_in">strncpy</span>(szPart2, szKey + <span class="number">11</span>, <span class="number">0xA</span>uLL);</span><br><span class="line">  <span class="built_in">strncpy</span>(szPart3, szKey + <span class="number">21</span>, <span class="number">0xA</span>uLL);</span><br><span class="line">  <span class="built_in">strncpy</span>(szPart4, szKey + <span class="number">31</span>, <span class="number">0xA</span>uLL);</span><br><span class="line">  <span class="built_in">memset</span>(szKey, <span class="number">0</span>, iKeyLength);</span><br><span class="line">  *szKey = <span class="number">123</span>;</span><br><span class="line">  <span class="built_in">strcat</span>(szKey, szPart3);</span><br><span class="line">  <span class="built_in">strcat</span>(szKey, szPart4);</span><br><span class="line">  <span class="built_in">strcat</span>(szKey, szPart1);</span><br><span class="line">  <span class="built_in">strcat</span>(szKey, szPart2);</span><br><span class="line">  szKey[<span class="number">41</span>] = <span class="number">125</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;</p><h2 id="3-代码分析"><a href="#3-代码分析" class="headerlink" title="3.代码分析"></a>3.代码分析</h2><p></p><p>第一段代码我们能够获取到flag[0]，flag[1]~flag[10]，flag[31]~flag[40]，flag[41]，以及调换顺序之后的flag</p><p></p><p></p><p>第二段代码实际上是在对原来的flag字符串的位置进行调换，"{}"中间有40个字符，10个为一组，现在的顺序就是3,4,2,1。</p><p></p><p></p><p>因此，我们通过调换顺序之后的flag，能够获取到原来的flag。<strong>这道题最坑的就是真正的flag没有"{}"</strong></p><p></p><p></p><p>&nbsp;</p><p></p><p></p><h2>4.get flag！</h2><p></p><blockquote><p>53fc275d81053ed5be8cdaf29f59034938ae4efd</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;测试文件：&lt;a href=&quot;https://adworld.xctf.org.cn/media/task/attachments/dc14f9a05f2846249336a84aecaf18a2.zip&quot; target=&quot;_blank&quot;&gt;https://adworld.xc
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BUUCTF--不一样的flag</title>
    <link href="http://hkmayfly.com/2019/09/17/BUUCTF-%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84flag/"/>
    <id>http://hkmayfly.com/2019/09/17/BUUCTF-不一样的flag/</id>
    <published>2019-09-17T01:15:33.000Z</published>
    <updated>2019-09-26T03:59:29.210Z</updated>
    
    <content type="html"><![CDATA[<p>测试文件：<a href="https://buuoj.cn/files/91b89e765c9aff8e82690c0868975b37/0bf39b5d-5f2f-4095-a921-fb5c20f53f21.zip?token=eyJ0ZWFtX2lkIjpudWxsLCJ1c2VyX2lkIjoxOTAzLCJmaWxlX2lkIjoxNDl9.XXmYkQ.5edzFDlCw_3UHmzs0yvtlqN2pqk" target="_blank">https://buuoj.cn/files/91b89e765c9aff8e82690c0868975b37/0bf39b5d-5f2f-4095-a921-fb5c20f53f21.zip?token=eyJ0ZWFtX2lkIjpudWxsLCJ1c2VyX2lkIjoxOTAzLCJmaWxlX2lkIjoxNDl9.XXmYkQ.5edzFDlCw_3UHmzs0yvtlqN2pqk</a></p><p>&nbsp;</p><h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h2><p><img src="https://img2018.cnblogs.com/blog/1228809/201909/1228809-20190912090144430-551523930.png" alt></p><p>获取信息</p><ul>    <li>32位文件</li></ul><p>&nbsp;</p><h2 id="2-IDA打开"><a href="#2-IDA打开" class="headerlink" title="2.IDA打开"></a>2.IDA打开</h2><p>将main函数反编译为C语言代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">char</span> v3; <span class="comment">// [esp+17h] [ebp-35h]</span></span><br><span class="line">   <span class="keyword">int</span> v4; <span class="comment">// [esp+30h] [ebp-1Ch]</span></span><br><span class="line">   <span class="keyword">int</span> v5; <span class="comment">// [esp+34h] [ebp-18h]</span></span><br><span class="line">   <span class="keyword">signed</span> <span class="keyword">int</span> v6; <span class="comment">// [esp+38h] [ebp-14h]</span></span><br><span class="line">   <span class="keyword">int</span> i; <span class="comment">// [esp+3Ch] [ebp-10h]</span></span><br><span class="line">   <span class="keyword">int</span> v8; <span class="comment">// [esp+40h] [ebp-Ch]</span></span><br><span class="line"> </span><br><span class="line">   __main();</span><br><span class="line">   v4 = <span class="number">0</span>;</span><br><span class="line">   v5 = <span class="number">0</span>;</span><br><span class="line">   qmemcpy(&amp;v3, _data_start__, <span class="number">0x19</span>u);</span><br><span class="line">   <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="built_in">puts</span>(<span class="string">"you can choose one action to execute"</span>);</span><br><span class="line">     <span class="built_in">puts</span>(<span class="string">"1 up"</span>);</span><br><span class="line">     <span class="built_in">puts</span>(<span class="string">"2 down"</span>);</span><br><span class="line">     <span class="built_in">puts</span>(<span class="string">"3 left"</span>);</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">"4 right\n:"</span>);</span><br><span class="line">     <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v6);</span><br><span class="line">     <span class="keyword">if</span> ( v6 == <span class="number">2</span> )</span><br><span class="line">     &#123;</span><br><span class="line">       ++v4;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> ( v6 &gt; <span class="number">2</span> )</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">if</span> ( v6 == <span class="number">3</span> )</span><br><span class="line">       &#123;</span><br><span class="line">         --v5;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">         <span class="keyword">if</span> ( v6 != <span class="number">4</span> )</span><br><span class="line"> LABEL_13:</span><br><span class="line">           <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">         ++v5;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">if</span> ( v6 != <span class="number">1</span> )</span><br><span class="line">         <span class="keyword">goto</span> LABEL_13;</span><br><span class="line">       --v4;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">1</span>; ++i )</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">if</span> ( *(&amp;v4 + i) &lt; <span class="number">0</span> || *(&amp;v4 + i) &gt; <span class="number">4</span> )</span><br><span class="line">         <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> ( *((_BYTE *)&amp;v8 + <span class="number">5</span> * v4 + v5 - <span class="number">41</span>) == <span class="string">'1'</span> )</span><br><span class="line">       <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">     <span class="keyword">if</span> ( *((_BYTE *)&amp;v8 + <span class="number">5</span> * v4 + v5 - <span class="number">41</span>) == <span class="string">'#'</span> )</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="built_in">puts</span>(<span class="string">"\nok, the order you enter is the flag!"</span>);</span><br><span class="line">       <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>&nbsp;</p><h2 id="3-代码分析"><a href="#3-代码分析" class="headerlink" title="3.代码分析"></a>3.代码分析</h2><p>查看第13行代码中的<b>_data_start__</b>&nbsp;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.data:00402000 __data_start__  db &apos;*11110100001010000101111#&apos;,0</span><br></pre></td></tr></table></figure><p>&nbsp;</p><p>通过第51行<strong>5 * v4</strong>，这是一个5行5列的迷宫（一共25个字符）</p><pre>*11110100001010000101111#</pre><p>&nbsp;</p><p>从*走到#即可</p><p>&nbsp;</p><h2 id="4-get-flag！"><a href="#4-get-flag！" class="headerlink" title="4.get flag！"></a>4.get flag！</h2><blockquote><p>flag{222441144222}</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;测试文件：&lt;a href=&quot;https://buuoj.cn/files/91b89e765c9aff8e82690c0868975b37/0bf39b5d-5f2f-4095-a921-fb5c20f53f21.zip?token=eyJ0ZWFtX2lkIjpudWxs
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://hkmayfly.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PyCharm+cmd中使用Anaconda 与 新建Python环境（Windows）</title>
    <link href="http://hkmayfly.com/2019/04/07/PyCharm-cmd%E4%B8%AD%E4%BD%BF%E7%94%A8Anaconda-%E4%B8%8E-%E6%96%B0%E5%BB%BAPython%E7%8E%AF%E5%A2%83%EF%BC%88Windows%EF%BC%89/"/>
    <id>http://hkmayfly.com/2019/04/07/PyCharm-cmd中使用Anaconda-与-新建Python环境（Windows）/</id>
    <published>2019-04-06T17:52:29.000Z</published>
    <updated>2019-04-06T18:01:55.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PyCharm配置Anaconda"><a href="#PyCharm配置Anaconda" class="headerlink" title="PyCharm配置Anaconda"></a>PyCharm配置Anaconda</h2><p><strong>Anaconda</strong>的安装在网上已经有了，这里主要讲之前已经安装了已经配置好Python环境变量以及PyCharm的情况下,使用<strong>Anaconda</strong>。</p><p>即在PyCharm中出现了<strong>&ldquo;<span style="color: #ff0000;">ModuleNotFoundError No module named 'requests'</span>&rdquo;</strong>错误</p><p>在已经配置好PyCharm的情况下,我们要使用<strong>Anaconda</strong>，需要将原来的编译器（删去），环境可以更换也可以就用原来的。</p><p>在PyCharm左上角<strong>File</strong>(文件)中点击<strong>setting</strong>(设置)==》选择<strong>Project</strong>(项目)==》<strong>Project Interpreter</strong>==》下拉菜单,点击<strong>show all...</strong>==》选定之前配置<strong>Python.exe</strong>,点右边的减号删除（由于我已经配置好了，所以在我这显示的是<strong>Anaconda</strong>的<strong>Python</strong>==》点击&lsquo;<strong>+</strong>&rsquo;号==》<strong>System</strong> <strong>Interpreter</strong>==》右边三个&lsquo;<strong>.</strong>&rsquo;==&gt;找到安装Anaconda的目录选择<strong>Python.exe</strong>==》确定，再返回我们的编译器，就能够引用<strong>requests</strong>等第三方模块了。（具体不懂参考下图）</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1teauizuqj30rz0andh7.jpg" alt width="783" height="298"></p><p>&nbsp;</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tec2q1voj30ia03g0ss.jpg" alt width="658" height="124"></p><p>&nbsp;</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tecm21kyj30ql0dhabn.jpg" alt width="769" height="390"></p><p>&nbsp;</p><h2 id="cmd中使用Anaconda"><a href="#cmd中使用Anaconda" class="headerlink" title="cmd中使用Anaconda"></a>cmd中使用Anaconda</h2><p>我们要在<strong>cmd</strong>中使用<strong>Anaconda</strong>，也是需要我们安装Anaconda文件夹中的<strong>Python.exe</strong>，因为我们之前已经配置的Python的环境，所以我们在控制不管怎么输入都是进入之前的编译器中，如果要修改需要到环境变量中更改，我认为没必要的。我们要在cmd中使用Anaconda,我们可以将它与之前安装的区分开。</p><p>直接在cmd中打开Anaconda文件夹中的Pyhton.exe就行。</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tengnlitj30cs07fdgm.jpg" alt width="460" height="267"></p><p>&nbsp;</p><h2 id="Python新环境创建"><a href="#Python新环境创建" class="headerlink" title="Python新环境创建"></a>Python新环境创建</h2><p>当然对于，Python的环境我们也可以利用<strong>virtualenv</strong>来创建一个新的环境</p> <h3 id="virtualenv模块下载"><a href="#virtualenv模块下载" class="headerlink" title="virtualenv模块下载"></a>virtualenv模块下载</h3><p>如果安装了Anaconda,可以直接使用<strong>virtualenv</strong>模块，没有就在cmd上运行（下面这部分为没有安装好Anaconda的准备）</p><div class="cnblogs_code"><pre><code class="ruby">pip3 install virtualenv</code></pre></div><p>上面的代码需要安装pip支持下载（不做说明）</p><p>&nbsp;</p><p>上面如果下载错误可以尝试换源：</p><div class="cnblogs_code"><pre>pip install virtualenv -i https:<span style="color: #008000;">//</span><span style="color: #008000;">pypi.tuna.tsinghua.edu.cn/simple/ </span></pre></div><p>&nbsp;</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>下载好之后，新建环境文件夹</p><p>&nbsp;</p><p>安装新的环境</p><div class="cnblogs_code"><pre>virtualenv --no-site-packages venv</pre></div><p>其中<strong>--no-site-packages</strong>是表示不从原来的Python环境中继承第三方库，你要一个干净的环境就加，不要就不加。</p><p>这样一来，我们的新环境就创建好了，Python编译器在Scripts文件夹中</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tf43klqmj30hk0h5dhj.jpg" alt width="596" height="582"></p><p>&nbsp;</p><p>这个新的环境你可以在PyCharm配置Anaconda时选择自己重新建一个干净的环境。</p><p>&nbsp;</p><p>进入/退出新环境</p><p>进入环境打开test_env/env/Scripts/activate文件即可进入该环境</p><p>输入deactivate退出环境</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tfvo2w63j30ik05hwfb.jpg" alt width="668" height="197"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PyCharm配置Anaconda&quot;&gt;&lt;a href=&quot;#PyCharm配置Anaconda&quot; class=&quot;headerlink&quot; title=&quot;PyCharm配置Anaconda&quot;&gt;&lt;/a&gt;PyCharm配置Anaconda&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;An
      
    
    </summary>
    
    
      <category term="Python" scheme="http://hkmayfly.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+hexo搭建个人博客</title>
    <link href="http://hkmayfly.com/2019/03/30/GitHub+Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AA%E4%BA%BA%E6%90%AD%E5%BB%BA/"/>
    <id>http://hkmayfly.com/2019/03/30/GitHub+Hexo博客个人搭建/</id>
    <published>2019-03-30T07:35:33.000Z</published>
    <updated>2019-09-17T08:25:31.086Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="注册GitHub账号。"><a href="#注册GitHub账号。" class="headerlink" title="注册GitHub账号。"></a>注册GitHub账号。</h3><p>不做说明</p><p>&nbsp;</p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>创建一个新的仓库来放置我们的文件。</p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta1ppyj9j308206ht8o.jpg"><p>&nbsp;</p><p>&nbsp;</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta4pff8hj30q70htq46.jpg" alt width="836" height="568"></p><p>&nbsp;</p><h3 id="下载安装Node-js"><a href="#下载安装Node-js" class="headerlink" title="下载安装Node.js"></a>下载安装Node.js</h3><p><strong><a href="https://nodejs.org/en/" target="_blank">https://nodejs.org/en/</a>&nbsp; </strong>&nbsp;两个版本，选择右边那个最新版</p><p>&nbsp;</p><h3 id="下载安装git"><a href="#下载安装git" class="headerlink" title="下载安装git"></a>下载安装git</h3><p><a href="https://www.git-scm.com/download/" target="_blank">https://www.git-scm.com/download/</a></p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta5d4vr9j30pl0by776.jpg" alt width="645" height="301"></p><p>&nbsp;</p><h3 id="检查安装"><a href="#检查安装" class="headerlink" title="检查安装"></a>检查安装</h3><p>打开你的cmd命令窗口</p><p>&nbsp;</p><p>检查<strong>Node.js</strong></p><blockquote><p>node -v</p><p>npm -v</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta5ukubfj307801o743.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta6k5y4gj306z01v0sj.jpg" alt></p><p>&nbsp;</p><p>检查<strong>git</strong></p><blockquote><p>git --version</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta6wgrtrj309501z3yh.jpg" alt></p><p>右键也可以看到你<strong>git bash</strong></p><p>&nbsp;</p><p>准备工作结束，开始搭建博客！</p><p>&nbsp;</p><h2 id="建立静态网站"><a href="#建立静态网站" class="headerlink" title="建立静态网站"></a>建立静态网站</h2><h3 id="创建存放博客文件的文件夹"><a href="#创建存放博客文件的文件夹" class="headerlink" title="创建存放博客文件的文件夹"></a>创建存放博客文件的文件夹</h3><p>在电脑上找个合适的地方，创建一个<strong>myblog</strong>文件夹，路径中别有中文，我的是在<strong>D:\myblog</strong></p><p>&nbsp;</p><p>从cmd中进入到myblog文件夹，当然你直接进到Blog文件夹右键 <strong>git bash here&nbsp;</strong>也可以，都是在Blog文件夹执行命令。</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta78v2r0j306h04ea9z.jpg" alt></p><p><span style="color: #ff0000;">（<strong>下面的一系列操作都是在myblog文件夹中进行的，cmd保持图片中打开的位置</strong>）</span></p><p>&nbsp;</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<strong>Hexo</strong></h3><p>输入命令</p><blockquote><p>npm install hexo -g</p></blockquote><p>&nbsp;</p><h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><p>输入命令</p><blockquote><p>hexo -version</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta7jtm5oj30aq09pt8z.jpg" alt></p><p>&nbsp;</p><h3 id="初始化文件"><a href="#初始化文件" class="headerlink" title="初始化文件"></a>初始化文件</h3><p>输入命令</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta8q6e6dj30jc08m0u8.jpg" alt width="644" height="287"></p><p>实验室网差，等吧... 找个网好的地方...</p><p>现在实际上就是在往<strong>myblog</strong>文件夹装入hexo文件了，可以去文件夹看看。</p><p>&nbsp;</p><h3 id="安装完毕！"><a href="#安装完毕！" class="headerlink" title="安装完毕！"></a>安装完毕！</h3><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta91yumqj30hv066gmh.jpg" alt></p><p>&nbsp;</p><p>下面6,7不想看的直接输入命令</p><blockquote><p>hexo g&amp;&amp;hexo s</p></blockquote><p>&nbsp;</p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><p>输入命令</p><blockquote><p>hexo generate</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1ta9msnjgj30cn065js9.jpg" alt></p><p>&nbsp;</p><h3 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h3><p>输入命令</p><blockquote><p>hexo server</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1taa0vhhxj30g003swep.jpg" alt></p><p>如果开启失败，显示端口已经被用了，换一个即可。我的是因为做过一个网站了，这个是做教程弄的。</p><p>更换端口命令：</p><blockquote><p>hexo server -p 4444</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1taad2lxkj30dn02k748.jpg"></p><p>&nbsp;</p><p>Hexo已经在运行了，按两次<strong>Ctrl+C</strong>结束</p><p>&nbsp;</p><h3 id="搭建完成"><a href="#搭建完成" class="headerlink" title="搭建完成"></a>搭建完成</h3><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1taapitglj30jk0fwdid.jpg" alt width="569" height="462"></p><p>&nbsp;</p><p>现在我们仅仅是在本地测试完成，接下来要弄到GitHub仓库中，才能在网上访问</p><p>&nbsp;</p><h2 id="绑定仓库"><a href="#绑定仓库" class="headerlink" title="绑定仓库"></a>绑定仓库</h2><h3 id="下载powershell"><a href="#下载powershell" class="headerlink" title="下载powershell"></a>下载<strong>powershell</strong></h3><p><a href="https://www.mls-software.com/opensshd.html" target="_blank">https://www.mls-software.com/opensshd.html</a></p><p>按住<strong>Ctrl+shift+右键</strong>，如果出现&ldquo;<strong>此处打开powershell</strong>&rdquo;，那就不需要安装。</p><p>&nbsp;</p><h3 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h3><p>输入命令</p><blockquote><p>ssh-keygen -t rsa</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tab15ak8j30nk0abjrf.jpg" alt width="729" height="319"></p><p>&nbsp;</p><p>输入命令后，一直回车就行，公钥放在上面powershell显示的文件夹中，我的是在：<strong>C:\Users\10245/.ssh/id_rsa.pub</strong></p><p>找到文件，打开复制。</p><p>&nbsp;</p><h3 id="创建ssh公钥"><a href="#创建ssh公钥" class="headerlink" title="创建ssh公钥"></a>创建ssh公钥</h3><p>在GitHub打开</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tabmntvzj307v0crt8v.jpg" alt width="194" height="315"></p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tadrojrij30uz0axt9d.jpg" alt width="766" height="270"></p><p>&nbsp;</p><p>输入公钥，增加SSH KEY</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tae6m32qj30vr0ezwfj.jpg" alt width="814" height="384"></p><p>&nbsp;</p><p>顺便去仓库，把仓库的ssh地址，复制了</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1taen9yzyj30tu0eh75b.jpg" alt width="728" height="353"></p><p>&nbsp;</p><h3 id="配置deployment"><a href="#配置deployment" class="headerlink" title="配置deployment"></a>配置deployment</h3><p>打开，根目录下（myblog中）的<strong>_config.ymlm</strong>，拉到最下面，找到deploy,配置为下图：（注意冒号后面都有一个空格）</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1taeziis5j30g205d74k.jpg" alt></p><p>&nbsp;</p><h3 id="打开powershell检验（cmd和git都可以）"><a href="#打开powershell检验（cmd和git都可以）" class="headerlink" title="打开powershell检验（cmd和git都可以）"></a>打开powershell检验（cmd和git都可以）</h3><p>使用powershell打开myblog文件夹</p><p>输入命令，测试连接</p><blockquote><p>ssh -T git@github.com</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tafla9pnj30kj0143ya.jpg" alt></p><p>出现这种，带有&ldquo;hi 用户名&rdquo;的才是成功。</p><p>&nbsp;</p><p>****在上传静态文件之前，你可以创建第一篇自己的博客。</p><p>cmd打开myblog,输入命令</p><blockquote><p>hexo new post &ldquo;博客名&rdquo;</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tafxeb58j30ho028t8q.jpg" alt></p><p>文件路径，也就是紫色文字，</p><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tag9bzgpj30f109ggmj.jpg" alt width="477" height="300"></p><p>&nbsp;</p><p>&nbsp;</p><h3 id="上传静态文件"><a href="#上传静态文件" class="headerlink" title="上传静态文件"></a>上传静态文件</h3><p>在cmd中打开myblog,执行命令</p><blockquote><p>npm install --save hexo-deployer-git</p></blockquote><p>输入命令</p><blockquote><p>hexo g -d</p></blockquote><p>&nbsp;</p><h3 id="访问博客"><a href="#访问博客" class="headerlink" title="访问博客"></a>访问博客</h3><p><img src="http://ww1.sinaimg.cn/large/007EVkFtgy1g1tagmsgqnj30n60d1gof.jpg" alt width="681" height="383"></p><p>上传完成之后，就可以访问我们网上的博客了。我的地址是：<strong>https://mayflyhk.github.io/</strong></p><p>你的博客地址，参照<strong> https://用户名.github.io/</strong> 填写</p><p>&nbsp;</p><p>gulp的优化方法记录在了这里：<a href="https://www.cnblogs.com/Mayfly-nymph/p/10623234.html" target="_blank">https://www.cnblogs.com/Mayfly-nymph/p/10623234.html</a></p><p>&nbsp;</p><p>其他博客美化教程，抽时间会继续添加。</p><p>&nbsp;</p><p><span style="font-size: 16px;">有什么问题，欢迎加我联系方式询问，喜欢的小伙伴可以关注一波！！！</span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;h3 id=&quot;注册GitHub账号。&quot;&gt;&lt;a href=&quot;#注册GitHub账号。&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="blog" scheme="http://hkmayfly.com/categories/blog/"/>
    
    
      <category term="博客建设" scheme="http://hkmayfly.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
</feed>
